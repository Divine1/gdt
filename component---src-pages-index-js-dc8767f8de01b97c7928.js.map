{"version":3,"sources":["webpack:///./src/hooks/use-allposts.js","webpack:///./src/constants/index.js","webpack:///./src/components/searchbar/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["useAllPosts","_2997365674","data","allMdx","nodes","tags","ReadLink","Object","styled_base_browser_esm","Link","target","name","styles","SearchbarComponent","props","_this","_React$Component","call","this","searchText","console","log","filteredData","allNodes","filter","index","length","searchstring","toLowerCase","includes","setState","renderData","text","searchResultsCount","filterByTag","selectedtag","state","componentDidMount","render","_this2","core_browser_esm","className","css","_ref","tagList","map","key","onClick","placeholder","type","value","onChange","event","_ref2","_ref3","tagData","tagsplit","split","to","slug","title","publisheddate","React","Component","HomePage","sort","a","b","frontmatter","articleid","_objectSpread","layout","components_searchbar","m","module","exports","require","default","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","propTypes","shape","pathname","HeaderLink","HeaderComponent","LayoutComponent","react_default","Fragment","layout_ref","Helmet_default","lang","content","header","children"],"mappings":"wLAuBeA,EArBG,WAkBd,OAhBaC,EAAAC,KAgBDC,OAAOC,+CCpBVC,UAAK,CACd,OAAO,UAAU,KAAK,qBCO1B,IAAMC,EAAWC,OAAAC,EAAA,EAAAD,CAAOE,IAAP,CAAAC,OAAA,YAAAH,CAAH,CAAAI,KAAA,UAAAC,OAAA,8rCAqMCC,sBA9LX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OACdA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAgBJC,WAAa,SAACA,GACVC,QAAQC,IAAI,cAAcF,GAC1B,IAAIG,EAAeP,EAAKD,MAAMS,SAASC,OAAO,SAACtB,EAAKuB,GAAN,QAAeN,EAAWO,QAAS,MAC3ExB,EAAKyB,aAAaC,cAAcC,SAASV,EAAWS,iBAI1Db,EAAKe,SAAS,CACVC,WAAaT,EACbU,KAAKb,EACLc,mBAAqBX,EAAaI,UA3BxBX,EA+BlBmB,YAAc,SAACC,GACXf,QAAQC,IAAI,eAAec,GAC3B,IAAIb,EAAeP,EAAKD,MAAMS,SAASC,OAAO,SAACtB,EAAKuB,GAAN,QAC1CvB,EAAKG,KAAKwB,SAASM,KAEvBpB,EAAKe,SAAS,CACVC,WAAaT,EACbU,KAAM,IAAIG,EAAY,IACtBF,mBAAqBX,EAAaI,UArCtCX,EAAKqB,MAAM,CACPJ,KAAO,GACPD,WAAa,GACbE,mBAAqB,GALXlB,oHAQlBsB,kBAAA,WACIjB,QAAQC,IAAI,wBACZ,IAAME,EAAWL,KAAKJ,MAAMS,SAC5BH,QAAQC,IAAI,YAAYE,GACxBL,KAAKY,SAAS,CACVC,WAAYR,EACZU,mBAAqBV,EAASG,YA4BtCY,OAAA,WAAQ,IAAAC,EAAArB,KAEJ,OACIX,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,mBACXlC,OAAAiC,EAAA,EAAAjC,CAAA,OACAmC,IAAGC,GAuBKC,EAAQC,IAAI,SAAC3C,EAAKuB,GAAN,OACRlB,OAAAiC,EAAA,EAAAjC,CAAA,QAAMkC,UAAU,MAAMK,IAAKrB,EACvBsB,QAAS,kBAAIR,EAAKL,YAAYhC,KAAQA,MAKtDK,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,aACXlC,OAAAiC,EAAA,EAAAjC,CAAA,SACIyC,YAAY,kCACZC,KAAK,OACLC,MAAOhC,KAAKkB,MAAMJ,KAClBmB,SAAU,SAACC,GAAD,OAAWb,EAAKpB,WAAWiC,EAAM1C,OAAOwC,UACtD3C,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,eAAf,OAEJlC,OAAAiC,EAAA,EAAAjC,CAAA,OAAKmC,IAAGW,GAyBJ9C,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,eACVvB,KAAKkB,MAAMH,mBADhB,IACuE,IAAlCf,KAAKkB,MAAMH,mBAA2B,SAAW,WAEtF1B,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,cACXM,QAAS,kBAAIR,EAAKpB,WAAW,MADjC,iBAIJZ,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,gBAAgBC,IAAGY,GA2C1BpC,KAAKkB,MAAML,WAAWc,IAAI,SAAC3C,EAAKuB,GAC5B,IAAI8B,EAAU,KACVC,EAAWtD,EAAKG,KAAKoD,MAAM,KAS/B,OAPIF,EADDC,EAAS9B,OAAS,EACP8B,EAASX,IAAI,SAAC3C,EAAKuB,GAAN,OACnBlB,OAAAiC,EAAA,EAAAjC,CAAA,OAAKuC,IAAKrB,EAAOgB,UAAU,OAAOvC,KAI5BK,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,OAAOe,GAGhCjD,OAAAiC,EAAA,EAAAjC,CAAA,OAAKuC,IAAKrB,EAAOgB,UAAU,UACvBlC,OAAAiC,EAAA,EAAAjC,CAACD,EAAD,CAAUmC,UAAU,QAAQiB,GAAIxD,EAAKyD,MAAOzD,EAAK0D,OACjDrD,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,QACXlC,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,iBAAiBvC,EAAK2D,eACrCtD,OAAAiC,EAAA,EAAAjC,CAAA,OAAKkC,UAAU,QACVc,aAlLZO,IAAMC,mICkBxBC,UAzBE,WACb,IAAIzC,EAAWvB,IAef,OAdAoB,QAAQC,IAAI,mBAAmBE,GAE/BA,EAAWA,EAAS0C,KAAK,SAASC,EAAGC,GACjC,OAAOD,EAAEE,YAAYC,UAAYF,EAAEC,YAAYC,WAAa,EAAI,IAEpEjD,QAAQC,IAAI,mBAAmBE,GAC/BA,EAAWA,EAASsB,IAAI,SAAC3C,EAAMuB,GAC3B,+ZAAA6C,CAAA,GACOpE,EAAKkE,YADZ,CAEIzC,aAAazB,EAAKkE,YAAYR,MAAM,IAAI1D,EAAKkE,YAAY/D,SAGjEe,QAAQC,IAAI,mBAAmBE,GAG3BhB,OAAAiC,EAAA,EAAAjC,CAACgE,EAAA,EAAD,KACIhE,OAAAiC,EAAA,EAAAjC,CAAA,WACIA,OAAAiC,EAAA,EAAAjC,CAACiE,EAAD,CAAWjD,SAAUA,4BC1BrC,IAAsBkD,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,wICapBX,IAAMgB,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,sPClEtB,IAAMC,EAAmB,SAAAzC,GAAiC,IAA9B0C,EAA8B1C,EAA9B0C,SAAUC,EAAoB3C,EAApB2C,cACpC,OAAKA,EAGExB,IAAMyB,cAAcC,4ZAApBlB,CAAA,CACLe,WACAC,iBACGA,EAAcG,OALV,MASXL,EAAiBM,UAAY,CAC3BL,SAAUN,IAAUY,MAAM,CACxBC,SAAUb,IAAUE,OAAOC,aAC1BA,YAGUE,6GCjBTS,EAAatF,OAAAC,EAAA,EAAAD,CAAOE,IAAP,CAAAC,OAAA,YAAAH,CAAH,CAAAI,KAAA,UAAAC,OAAA,yNA2BDkF,EArBS,kBACpBvF,OAAAiC,EAAA,EAAAjC,CAAA,OAAKmC,IAAGC,GAUJpC,OAAAiC,EAAA,EAAAjC,CAAA,OAAKmC,IAAGW,GAKJ9C,OAAAiC,EAAA,EAAAjC,CAACsF,EAAD,CAAYnC,GAAG,KAAf,6TC2BGqC,IAhDO,SAACjF,GAAD,OAClBP,OAAAiC,EAAA,EAAAjC,CAAAyF,EAAA9B,EAAA+B,SAAA,KACI1F,OAAAiC,EAAA,EAAAjC,CAACiC,EAAA,EAAD,CAAQ5B,OAAMsF,IA+Bd3F,OAAAiC,EAAA,EAAAjC,CAAC4F,EAAAjC,EAAD,KACI3D,OAAAiC,EAAA,EAAAjC,CAAA,QAAM6F,KAAK,OACX7F,OAAAiC,EAAA,EAAAjC,CAAA,wCACAA,OAAAiC,EAAA,EAAAjC,CAAA,QAAMI,KAAK,cAAc0F,QAAQ,uBAErC9F,OAAAiC,EAAA,EAAAjC,CAAA,cACIA,OAAAiC,EAAA,EAAAjC,CAAC+F,EAAD,OAEJ/F,OAAAiC,EAAA,EAAAjC,CAAA,YACKO,EAAMyF,UAEXhG,OAAAiC,EAAA,EAAAjC,CAAA","file":"component---src-pages-index-js-dc8767f8de01b97c7928.js","sourcesContent":["import {graphql,useStaticQuery} from 'gatsby'\n\nconst useAllPosts=()=>{\n\n    const data = useStaticQuery(graphql`\n        query {\n            allMdx {\n                nodes {\n                    frontmatter {\n                        author\n                        slug\n                        title\n                        articleid\n                        publisheddate\n                        tags\n                    }\n                }\n            }\n        }\n    `)\n    return data.allMdx.nodes\n}\n\nexport default useAllPosts;","export const tags=[\n    \"java\",\"node.js\",\"ar\",\"machine-learning\"\n]","import React from 'react'\nimport {Link} from 'gatsby'\nimport {css} from '@emotion/core'\nimport styled from '@emotion/styled'\n\nimport './index.css';\nimport {tags as tagList} from './../../constants'\n\nconst ReadLink = styled(Link)`\n    display:block;\n    text-decoration:none;\n\n`\n\nclass SearchbarComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            text : \"\",\n            renderData : [],\n            searchResultsCount : 0\n        }\n    }\n    componentDidMount(){\n        console.log(\"in componentDidMount\")\n        const allNodes = this.props.allNodes\n        console.log(\"allNodes \",allNodes)\n        this.setState({\n            renderData: allNodes,\n            searchResultsCount : allNodes.length\n        })\n    }\n    searchText = (searchText)=>{\n        console.log(\"searchText \",searchText)  \n        let filteredData = this.props.allNodes.filter((data,index)=>(searchText.length >=3\n            ? data.searchstring.toLowerCase().includes(searchText.toLowerCase()) ? true : false\n            : true\n        ))\n\n        this.setState({\n            renderData : filteredData,\n            text:searchText,\n            searchResultsCount : filteredData.length\n        })\n        \n    }\n    filterByTag = (selectedtag)=>{\n        console.log(\"selectedtag \",selectedtag)\n        let filteredData = this.props.allNodes.filter((data,index)=>(\n            data.tags.includes(selectedtag) ? true : false            \n        ))\n        this.setState({\n            renderData : filteredData,\n            text: '['+selectedtag+']',\n            searchResultsCount : filteredData.length\n        })\n    }\n    render(){\n        \n        return(\n            <div className=\"searchcontainer\">\n                <div \n                css={css`\n                    position: relative;\n                    top: -6px;\n                    text-align:center;\n                    margin-bottom:10px;\n                    font-size:13px;\n                    .tag{\n                        border-radius:2px;\n                        border:0px solid grey;\n                        background-color:#e1ecf4;\n                        color:#38739d;\n                        padding:3px 5px;\n                    }\n                    .tag:hover{\n                        cursor:pointer;\n                        background-color:#cee0ed;\n                    }\n                    .tag:not(:first-of-type){\n                        margin-left:5px;\n                    }\n                `}\n                >\n                    {\n                        tagList.map((data,index)=>(\n                            <span className=\"tag\" key={index} \n                                onClick={()=>this.filterByTag(data)}>{data}</span>\n                            )\n                        )\n                    }\n                </div>\n                <div className=\"searchbar\">\n                    <input \n                        placeholder=\"Search for articles (title/tag)\"\n                        type=\"text\" \n                        value={this.state.text} \n                        onChange={(event) => this.searchText(event.target.value)} />\n                    <div className=\"searchemoji\">🔍</div>\n                </div>\n                <div css={css`\n                    position:relative;\n                    top:5px;\n                    //left:3px;\n                    display: flex;\n                    justify-content: space-between;\n\n                    .resultcount{\n                        font-size:12px;\n                        position:relative;\n                        display:inline-block;\n                    }\n                    .clearsearch{\n                        display:inline-block;\n                        font-size:12px;\n                        border-bottom:1px solid #928f8f;\n                        cursor:pointer;\n                        position: relative;\n                        color:#928f8f;\n                        &:hover{\n                            color:#b3afaf;\n                            border-bottom:1px solid #b3afaf;\n                        }\n                    }\n                `}>\n                    <div className=\"resultcount\">\n                        {this.state.searchResultsCount} {this.state.searchResultsCount === 1 ? 'result' : 'results'}\n                    </div>\n                    <div className=\"clearsearch\" \n                        onClick={()=>this.searchText(\"\")}>clear search</div>\n                    \n                </div>\n                <div className=\"searchresults\" css={css`{\n                    .result{\n                        border-bottom:1px solid #dcd4d4;\n                        padding: 10px 0px;\n                        .title{\n                            color:#0276cc;\n                        }\n                        .title:hover{\n                            color:#56aff1;\n                            cursor:pointer;\n                        }\n                        .meta{\n                            padding: 3px 0px;\n                            font-size:11px;\n                            .publisheddate{\n                                display:inline-block;\n                                color:#757575;\n                            }\n                            .tags{\n                                display:inline-block;\n                                margin-top:3px;\n                                margin-left:15px;\n                                .tag{\n                                    display:inline-block;\n                                    padding:1.2px 4.5px;\n                                    border-radius:2px;\n                                    border:0px solid grey;\n                                    background-color:#e1ecf4;\n                                    color:#38739d;\n                                }\n                                .tag:hover{\n                                    background-color:#cee0ed;\n                                    cursor:default;\n                                }\n                                .tag:not(:first-of-type){\n                                    margin-left:4px;\n                                }\n                            }\n                        }\n                        \n                    }\n                }`}>\n                    {\n                        this.state.renderData.map((data,index)=>{\n                            let tagData = null\n                            let tagsplit = data.tags.split(\",\")\n                            if(tagsplit.length > 1){\n                                tagData = tagsplit.map((data,index)=>(\n                                    <div key={index} className=\"tag\">{data}</div>\n                                ))\n                            }\n                            else{\n                                tagData = <div className=\"tag\">{tagsplit}</div>\n                            }\n                            return (\n                                <div key={index} className=\"result\">\n                                    <ReadLink className=\"title\" to={data.slug}>{data.title}</ReadLink>\n                                    <div className=\"meta\">\n                                        <div className=\"publisheddate\">{data.publisheddate}</div>\n                                        <div className=\"tags\">\n                                            {tagData}\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchbarComponent","import React from 'react'\nimport {Link} from 'gatsby'\nimport {css} from '@emotion/core'\nimport useAllPosts from './../hooks/use-allposts';\nimport Layout from './../components/layout';\nimport Searchbar from '../components/searchbar'\n\nconst HomePage = ()=>{\n    let allNodes = useAllPosts()\n    console.log(\"before allNodes \",allNodes)\n    \n    allNodes = allNodes.sort(function(a, b) {\n        return a.frontmatter.articleid > b.frontmatter.articleid ? -1 : 1\n    })\n    console.log(\"after allNodes1 \",allNodes)\n    allNodes = allNodes.map((data, index) =>{\n        return {\n            ...data.frontmatter,\n            searchstring:data.frontmatter.title+\" \"+data.frontmatter.tags\n        }\n    })\n    console.log(\"after allNodes2 \",allNodes)\n\n    return(\n        <Layout>\n            <div>\n                <Searchbar allNodes={allNodes}/>\n            </div>\n        </Layout>\n    )\n}\n\nexport default HomePage","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport {css} from '@emotion/core'\nimport {Link} from 'gatsby'\nimport styled from '@emotion/styled'\n\nconst HeaderLink = styled(Link)`\n    color:orange;\n    text-decoration:none; \n\n`\n\nconst HeaderComponent = ()=>(\n    <div css={css`\n        padding:1rem 0;\n        a{\n            &:hover{\n                color:green;\n            }\n        }\n        background-color:black;\n        margin-bottom:20px;\n    `}>        \n        <div css={css`\n            margin:0 auto;\n            width:90%;\n            max-width:800px;\n        `}>\n            <HeaderLink to=\"/\">HOME</HeaderLink>\n        </div>\n    </div>\n)\n\nexport default HeaderComponent","import React from 'react'\nimport Helment from 'react-helmet'\nimport {Global,css} from '@emotion/core'\nimport Header from './header'\nimport Footer from './footer'\n\nconst LayoutComponent=(props)=>(\n    <>\n        <Global styles={css`\n            *{\n                box-sizing:border-box;\n                margin:0;\n            }\n            html,body{\n                margin:0;\n                color:#555;\n                font-size:18px;\n                line-height:1.4;\n                font-family: sans-serif;\n            }\n            body{\n                background-color:white;\n            }\n            header{\n                height:61px;\n                position:fixed;\n                width:100%;\n                z-index:10;\n            }\n            main{\n                top:80px;\n                position:relative;\n                margin:0 auto;\n                width:90%;\n                max-width:800px;\n            }\n        `\n        }\n        />\n        <Helment>\n            <html lang=\"en\" />\n            <title>Genericdatatype - title</title>\n            <meta name=\"description\" content=\"generic data type\" />   \n        </Helment>\n        <header>\n            <Header />\n        </header>\n        <main>\n            {props.children}\n        </main>\n        <footer></footer>\n    </>\n)\n\nexport default LayoutComponent\n\n"],"sourceRoot":""}