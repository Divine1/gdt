{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["AboutPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","m","module","exports","require","default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","createElement","InternalPageRenderer","_objectSpread","json","propTypes","shape","pathname","HeaderLink","styled_base_browser_esm","Link","target","name","styles","HeaderComponent","core_browser_esm","css","_ref2","LayoutComponent","props","react_default","a","Fragment","layout_ref","Helmet_default","lang","content","header","children"],"mappings":"qIAYeA,UARG,kBACdC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,EAAAD,CAAA,wBACAA,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CAAMC,GAAG,KAAT,oCCPR,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,wICapBK,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,sPClEtB,IAAMC,EAAmB,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEV,IAAMW,cAAcC,4ZAApBC,CAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXP,EAAiBQ,UAAY,CAC3BN,SAAUP,IAAUc,MAAM,CACxBC,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUE,6GCjBTW,EAAa5B,OAAA6B,EAAA,EAAA7B,CAAO8B,IAAP,CAAAC,OAAA,YAAA/B,CAAH,CAAAgC,KAAA,UAAAC,OAAA,yNA2BDC,EArBS,kBACpBlC,OAAAmC,EAAA,EAAAnC,CAAA,OAAKoC,IAAGlB,GAUJlB,OAAAmC,EAAA,EAAAnC,CAAA,OAAKoC,IAAGC,GAKJrC,OAAAmC,EAAA,EAAAnC,CAAC4B,EAAD,CAAYxB,GAAG,KAAf,yOCmBGkC,IAxCO,SAACC,GAAD,OAClBvC,OAAAmC,EAAA,EAAAnC,CAAAwC,EAAAC,EAAAC,SAAA,KACI1C,OAAAmC,EAAA,EAAAnC,CAACmC,EAAA,EAAD,CAAQF,OAAMU,IAuBd3C,OAAAmC,EAAA,EAAAnC,CAAC4C,EAAAH,EAAD,KACIzC,OAAAmC,EAAA,EAAAnC,CAAA,QAAM6C,KAAK,OACX7C,OAAAmC,EAAA,EAAAnC,CAAA,wCACAA,OAAAmC,EAAA,EAAAnC,CAAA,QAAMgC,KAAK,cAAcc,QAAQ,uBAErC9C,OAAAmC,EAAA,EAAAnC,CAAA,cACIA,OAAAmC,EAAA,EAAAnC,CAAC+C,EAAD,OAEJ/C,OAAAmC,EAAA,EAAAnC,CAAA,YACKuC,EAAMS,UAEXhD,OAAAmC,EAAA,EAAAnC,CAAA","file":"component---src-pages-about-js-8a7cf4511fa4c912dde0.js","sourcesContent":["import React from 'react'\nimport {Link} from 'gatsby'\n\nimport Layout from './../components/layout';\nconst AboutPage = ()=>(\n    <Layout>\n        <div>AboutPage</div>\n        <Link to=\"/\">Goto home</Link>\n\n    </Layout>\n)\n\nexport default AboutPage","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport {css} from '@emotion/core'\nimport {Link} from 'gatsby'\nimport styled from '@emotion/styled'\n\nconst HeaderLink = styled(Link)`\n    color:orange;\n    text-decoration:none; \n\n`\n\nconst HeaderComponent = ()=>(\n    <div css={css`\n        padding:1rem 0;\n        a{\n            &:hover{\n                color:green;\n            }\n        }\n        background-color:black;\n        margin-bottom:20px;\n    `}>        \n        <div css={css`\n            margin:0 auto;\n            width:90%;\n            max-width:800px;\n        `}>\n            <HeaderLink to=\"/\">HOME</HeaderLink>\n        </div>\n    </div>\n)\n\nexport default HeaderComponent","import React from 'react'\nimport Helment from 'react-helmet'\nimport {Global,css} from '@emotion/core'\nimport Header from './header'\nimport Footer from './footer'\n\nconst LayoutComponent=(props)=>(\n    <>\n        <Global styles={css`\n            *{\n                box-sizing:border-box;\n                margin:0;\n            }\n            html,body{\n                margin:0;\n                color:#555;\n                font-size:18px;\n                line-height:1.4;\n                font-family: sans-serif;\n            }\n            body{\n                background-color:white;\n            }\n            main{\n                margin:0 auto;\n                width:90%;\n                max-width:800px;\n            }\n        `\n        }\n        />\n        <Helment>\n            <html lang=\"en\" />\n            <title>Genericdatatype - title</title>\n            <meta name=\"description\" content=\"generic data type\" />   \n        </Helment>\n        <header>\n            <Header />\n        </header>\n        <main>\n            {props.children}\n        </main>\n        <footer></footer>\n    </>\n)\n\nexport default LayoutComponent\n\n"],"sourceRoot":""}