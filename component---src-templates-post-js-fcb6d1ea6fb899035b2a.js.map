{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-mdx/index.js","webpack:///./node_modules/gatsby-mdx/mdx-renderer.js","webpack:///./node_modules/core-js/modules/_bind.js"],"names":["query","PostTemplate","_ref2","post","data","mdx","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","frontmatter","title","css","_ref","author","gatsby_mdx__WEBPACK_IMPORTED_MODULE_2__","code","body","$export","__webpack_require__","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","result","Function","call","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","components","children","props","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","End","useMemo","fullScope","_objectSpread","keys","values","map","key","_construct","concat","fn","createElement","invoke","arraySlice","slice","factories","exports","that","this","partArgs","bound","len","n","i","join"],"mappings":"yKAMaA,EAAK,2DA8BHC,UAhBK,SAAAC,GAAwB,IAAVC,EAAUD,EAAtBE,KAAMC,IACxB,OACIC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,SAAA,KACIJ,OAAAC,EAAA,EAAAD,CAAA,UAAKH,EAAKQ,YAAYC,OACtBN,OAAAC,EAAA,EAAAD,CAAA,KACIO,IAAGC,GADP,aAKeX,EAAKQ,YAAYI,QAEhCT,OAAAC,EAAA,EAAAD,CAACU,EAAA,YAAD,KAAcb,EAAKc,KAAKC,6BC9BpC,IAAAC,EAAcC,EAAQ,GACtBC,EAAaD,EAAQ,IACrBE,EAAgBF,EAAQ,IACxBG,EAAeH,EAAQ,GACvBI,EAAeJ,EAAQ,GACvBK,EAAYL,EAAQ,IACpBM,EAAWN,EAAQ,KACnBO,GAAkBP,EAAQ,GAAWQ,SAAA,IAAeC,UAIpDC,EAAAL,EAAA,WACA,SAAAM,KACA,QAAAJ,EAAA,aAAiD,GAAAI,kBAEjDC,GAAAP,EAAA,WACAE,EAAA,gBAGAR,IAAAc,EAAAd,EAAAY,GAAAD,GAAAE,GAAA,WACAH,UAAA,SAAAK,EAAAC,GACAb,EAAAY,GACAX,EAAAY,GACA,IAAAC,EAAAC,UAAAC,OAAA,EAAAJ,EAAAZ,EAAAe,UAAA,IACA,GAAAL,IAAAF,EAAA,OAAAH,EAAAO,EAAAC,EAAAC,GACA,GAAAF,GAAAE,EAAA,CAEA,OAAAD,EAAAG,QACA,kBAAAJ,EACA,kBAAAA,EAAAC,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,IAAAI,EAAA,OAEA,OADAA,EAAAC,KAAAC,MAAAF,EAAAJ,GACA,IAAAT,EAAAe,MAAAP,EAAAK,IAGA,IAAAG,EAAAN,EAAAO,UACAC,EAAAvB,EAAAG,EAAAkB,KAAApC,OAAAqC,WACAE,EAAAC,SAAAL,MAAAM,KAAAb,EAAAU,EAAAT,GACA,OAAAX,EAAAqB,KAAAD,0BCtCA,IAAMI,EAAcC,EAApB,KAEAC,UAAiB,CACfF,YAAaA,kqCCTf,IAAMG,EAAQF,EAAd,KACkCA,EAAO,IAAjCG,qBAAkB/C,QAClBgD,EAAgBJ,EAAO,KAAvBI,YAERH,UAAiB,SAAApC,GAKd,IAJDwC,EAICxC,EAJDwC,MACAC,EAGCzC,EAHDyC,WACAC,EAEC1C,EAFD0C,SACGC,sIACFC,CAAA5C,EAAA,mCACK6C,EAAgBP,EAAtBG,GACMK,EAAWP,EAFhBC,GAKKO,EAAMV,EAAAW,QACV,WACE,IAAAN,EACE,YAGF,IAAMO,EAASC,EAAA,CAGbb,MAHaA,EAIb9C,OAJFuD,GAQMK,EAAO3D,YAAbyD,GACMG,EAASD,EAAAE,IAAS,SAAAC,GAAG,OAAIL,EAAJK,KAG3B,OAFQC,EAAAvB,SAAA,QAAAwB,OAAAL,EAAA,IAART,KAEOe,yBAAPL,KAEF,CAAAV,EApBFF,IAuBA,OACEH,EAAAqB,cAAAX,EAAAG,EAAA,CAA2BT,WAAYI,GADzCF,uCCpCF,IAAAnC,EAAgBF,EAAQ,IACxBI,EAAeJ,EAAQ,GACvBqD,EAAarD,EAAQ,KACrBsD,EAAA,GAAAC,MACAC,EAAA,GAUA1B,EAAA2B,QAAA/B,SAAApB,MAAA,SAAAoD,GACA,IAAAP,EAAAjD,EAAAyD,MACAC,EAAAN,EAAA3B,KAAAV,UAAA,GACA4C,EAAA,WACA,IAAA9C,EAAA6C,EAAAV,OAAAI,EAAA3B,KAAAV,YACA,OAAA0C,gBAAAE,EAbA,SAAAlD,EAAAmD,EAAA/C,GACA,KAAA+C,KAAAN,GAAA,CACA,QAAAO,EAAA,GAAAC,EAAA,EAA2BA,EAAAF,EAASE,IAAAD,EAAAC,GAAA,KAAAA,EAAA,IAEpCR,EAAAM,GAAApC,SAAA,sBAAAqC,EAAAE,KAAA,UACG,OAAAT,EAAAM,GAAAnD,EAAAI,GAQHN,CAAA0C,EAAApC,EAAAG,OAAAH,GAAAsC,EAAAF,EAAApC,EAAA2C,IAGA,OADAtD,EAAA+C,EAAA5B,aAAAsC,EAAAtC,UAAA4B,EAAA5B,WACAsC","file":"component---src-templates-post-js-fcb6d1ea6fb899035b2a.js","sourcesContent":["import React from 'react'\nimport {graphql} from 'gatsby'\nimport {css} from '@emotion/core'\nimport {MDXRenderer} from 'gatsby-mdx'\n//import Layout from './../components/layout'\n\nexport const query= graphql`\n    query($slug : String!) {\n        mdx(frontmatter: {slug: {eq: $slug}}) {\n            frontmatter {\n                author\n                title\n            }\n            code{\n                body\n            }\n        }\n    }\n`\n\nconst PostTemplate =({data:{mdx : post}}) =>{\n    return (\n        <>\n            <h1>{post.frontmatter.title}</h1>\n            <p\n                css={css`\n                    font-size:0.75rem;\n                `}\n            >\n                Posted by {post.frontmatter.author}\n            </p>\n            <MDXRenderer>{post.code.body}</MDXRenderer>\n        </>\n    )\n}\n\nexport default PostTemplate;","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/**\n * Welcome to gastby-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(\"./mdx-renderer\");\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer\n};\n","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  // Memoize the compiled component\n  const End = React.useMemo(\n    () => {\n      if (!children) {\n        return null;\n      }\n\n      const fullScope = {\n        // React is here just in case the user doesn't pass them in\n        // in a manual usage of the renderer\n        React,\n        mdx,\n        ...mdxScope\n      };\n\n      const keys = Object.keys(fullScope);\n      const values = keys.map(key => fullScope[key]);\n      const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n      return fn({}, ...values);\n    },\n    [children, scope]\n  );\n\n  return (\n    React.createElement(End, { components: mdxComponents, ...props })\n  );\n};\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n"],"sourceRoot":""}