{"version":3,"sources":["webpack:///./src/components/PostPreview.js","webpack:///./src/hooks/use-posts.js","webpack:///./src/components/hero.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/hooks/use-sitemetadata.js","webpack:///./src/components/layout.js","webpack:///./src/components/read-link.js"],"names":["PostPreview","_ref4","post","Object","core_browser_esm","css","_ref","gatsby_browser_entry","to","slug","_ref2","gatsby_image_default","a","fluid","image","_ref3","alt","title","excerpt","read_link","usePosts","_3319252302","data","allMdx","nodes","map","frontmatter","author","sharp","ImageBackground","styled_base_browser_esm","BackgroundImage","target","name","styles","Hero","_3898329518","console","log","tag","fadeIn","IndexPage","react_default","Fragment","hero","layout","index","components_PostPreview","key","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","shape","pathname","NavLink","Link","props","fontWeight","Header","activeClassName","useSiteMetadata","_2862553537","site","siteMetadata","Layout","_useSiteMetadata","description","layout_ref","Helmet_default","lang","content","header","layout_ref2","children","ReadLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-index-js-42f49130fdf006c01400.js","sourcesContent":["import React from 'react'\nimport {css} from '@emotion/core'\nimport {Link} from 'gatsby'\nimport ReadLink from './read-link'\nimport Image from 'gatsby-image'\nconst PostPreview = ({post}) =>(\n    <article \n        css={css`\n            border-bottom:1px solid #ddd;\n            margin-top:0.75rem;\n            padding-bottom:1rem;\n            display:flex;\n            &:first-of-type{\n                margin-top:1rem;\n            }\n        `\n        }\n    >\n        <Link to={post.slug} css={css`\n            margin:1rem 1rem 0 0;\n            width:100px;\n        `}>\n            <Image \n                fluid={post.image}\n                css={css`\n                    *{\n                        margin-top:0;\n                    }\n                `}\n                alt={post.title}\n            />\n        </Link>\n        <div>\n            <h3>\n                <Link to={post.slug}>{post.title}</Link>\n            </h3>\n            <p>{post.excerpt}</p>\n            <ReadLink to={post.slug}>read this post &rarr;</ReadLink>\n        </div>\n    </article>\n)\n\nexport default PostPreview\n","import {graphql,useStaticQuery} from 'gatsby'\nconst usePosts=()=>{\n    const data= useStaticQuery(graphql`\n        query{\n            allMdx {\n                nodes {\n                    excerpt\n                    frontmatter {\n                        author\n                        slug\n                        title\n                        image{\n                            sharp : childImageSharp{\n                                fluid(\n                                    maxWidth:100\n                                    maxHeight:100\n                                ){\n                                    ...GatsbyImageSharpFluid_withWebp\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    return data.allMdx.nodes.map(post =>({\n        title:post.frontmatter.title,\n        author:post.frontmatter.author,\n        slug:post.frontmatter.slug,\n        excerpt:post.excerpt,\n        image:post.frontmatter.image.sharp.fluid\n    }))\n}\nexport default usePosts","import React from 'react'\nimport styled from '@emotion/styled'\nimport {Link,graphql,useStaticQuery} from 'gatsby'\nimport BackgroundImage from 'gatsby-background-image'\n\n// background-image: url('/images/road.jpg');\n\nconst ImageBackground = styled(BackgroundImage)`\n    background-position: top 20% center;\n    background-size:cover;\n    height:50vh;\n    + * {\n        margin-top:0;\n    }\n    h1{\n        text-shadow:1px 1px 3px #eeddff66;\n    }\n`\nconst Hero = ()=>{\n\n    const data = useStaticQuery(graphql`\n        query {\n            image : file(relativePath: {eq: \"road.jpg\"}) {\n                sharp : childImageSharp {\n                    fluid {\n                        ...GatsbyImageSharpFluid_withWebp\n                    }\n                }\n            }\n        }\n    `)\n    console.log(\"hero data \",data)\n    return(\n        <ImageBackground tag=\"section\" fluid={data.image.sharp.fluid} fadeIn=\"soft\">\n            <h1>Generic data type&hearts;</h1>\n            <p>\n                Hello <Link to=\"/about/\">Learn about me &rarr;</Link>\n            </p>\n        </ImageBackground>\n    )\n}\nexport default Hero","import React from 'react'\nimport {Link} from 'gatsby'\nimport Layout from './../components/layout';\nimport PostPreview from './../components/PostPreview'\nimport usePosts from './../hooks/use-posts'\nimport Hero from './../components/hero'\nconst IndexPage = () =>(\n    <>\n        <Hero />\n        <Layout>\n            <div>Hello world</div>\n            <Link to=\"/about/\">Goto About me</Link>\n            {\n                usePosts().map((post,index)=>(\n                    <PostPreview post={post} key={index} />\n                ))\n            }\n        </Layout>\n    </>\n)\n\nexport default IndexPage","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {css} from '@emotion/core'\nimport {Link} from 'gatsby'\n\nconst NavLink = styled(Link)`\n    color:#222;\n    font-size:1rem;\n    line-height:1;\n    margin:0 0.5rem 0 0;\n    padding: 0.25rem;\n    text-decoration: none;\n    font-weight: ${props => props.fontWeight || 'normal'};\n    &.current-page{\n        border-bottom:2px solid #222;\n    }\n`\n\nconst Header = ()=>(\n    <header css={css`\n        background:#eee;\n        border-bottom:1px solid #ddd;\n        display:flex;\n        justify-content:space-between;\n        padding: 0.5rem calc((100vw - 550px - 0.5rem) / 2);\n\n    `}>\n        <NavLink to=\"/\">FEM Workshop</NavLink>\n        <nav css={css`\n            margin-top:0;\n        `} >\n            <NavLink fontWeight=\"bold\" to=\"/\" activeClassName=\"current-page\">Home</NavLink>\n            <NavLink to=\"/about\" activeClassName=\"current-page\">About</NavLink>\n        </nav>\n    </header>\n)\n\nexport default Header;","import {graphql,useStaticQuery} from 'gatsby'\n\nconst useSiteMetadata=()=>{\n    const data=useStaticQuery(graphql`\n        query{\n            site{\n                siteMetadata{\n                    title\n                    description\n                }\n            }\n        }\n    `)\n    return data.site.siteMetadata\n}\nexport default useSiteMetadata","import React from 'react'\nimport {Global,css} from '@emotion/core'\nimport Header from './header'\nimport Helment from 'react-helmet'\nimport useSiteMetadata from './../hooks/use-sitemetadata'\n\nconst Layout = (props) =>{\n    const {title,description} = useSiteMetadata()\n    return(\n        <>\n            <Global styles={css`\n                * {\n                    box-sizing:border-box;\n                    margin:0;\n                }\n                * + *{\n                    margin-top:1rem;\n                }\n                html,body{\n                    margin:0;\n                    color:#555;\n                    font-size:18px;\n                    line-height:1.4;\n                    > div {\n                        margin-top: 0;\n                    }\n                }\n                h1,h2,h3,h4,h5,h6{\n                    color:#222;\n                    line-height:1.1;\n                    + * {\n                        margin-top:0.5rem;\n                    }\n                }\n                strong{\n                    color:#222;\n                }\n                li{\n                    margin-top:0.25rem;\n                }\n\n            `} />\n            <Helment>\n                <html lang=\"en\" />\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                \n            </Helment>\n            <Header />\n            <main\n            css={css`\n                margin: 2rem auto 4rem;\n                max-width:90vw;\n                width:550px;\n            `}\n            >{props.children}</main>\n        </>\n    )\n}\nexport default Layout;","import styled from '@emotion/styled'\nimport {Link} from 'gatsby'\n\nconst ReadLink = styled(Link)`\n    display:inline-block;\n    font-size:0.875.rem;\n`;  \n\nexport default ReadLink"],"sourceRoot":""}