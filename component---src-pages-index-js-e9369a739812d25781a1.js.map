{"version":3,"sources":["webpack:///./src/hooks/use-allposts.js","webpack:///./src/components/searchbar/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["useAllPosts","_4019451145","data","allMdx","nodes","SearchbarComponent","props","_this","_React$Component","call","this","state","text","allNodes","componentDidMount","console","log","setState","render","_this2","renderSearchData","filter","index","length","frontmatter","title","toLowerCase","includes","Object","core_browser_esm","className","placeholder","type","value","onChange","event","target","css","_ref","onClick","map","key","React","Component","HomePage","sort","a","b","articleid","layout","components_searchbar","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","_objectSpread","json","propTypes","shape","pathname","HeaderLink","styled_base_browser_esm","Link","name","styles","HeaderComponent","_ref2","to","LayoutComponent","react_default","Fragment","layout_ref","Helmet_default","lang","content","header","children"],"mappings":"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","file":"component---src-pages-index-js-e9369a739812d25781a1.js","sourcesContent":["import {graphql,useStaticQuery} from 'gatsby'\n\nconst useAllPosts=()=>{\n\n    const data = useStaticQuery(graphql`\n        query {\n            allMdx {\n                nodes {\n                    frontmatter {\n                        author\n                        slug\n                        title\n                        articleid\n                    }\n                }\n            }\n        }\n    `)\n    return data.allMdx.nodes\n}\n\nexport default useAllPosts;","import React from 'react'\nimport {Link} from 'gatsby'\nimport {css} from '@emotion/core'\nimport './index.css';\n\nclass SearchbarComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            text : \"\",\n            allNodes : []\n        }\n    }\n    componentDidMount(){\n        console.log(\"in componentDidMount\")\n        const allNodes = this.props.allNodes\n        console.log(\"allNodes \",allNodes)\n        this.setState({allNodes : allNodes})\n    }\n    render(){\n\n        let renderSearchData = this.state.allNodes.filter((data,index)=>{\n            if(this.state.text.length >3){\n                return data.frontmatter.title.toLowerCase().includes(this.state.text.toLowerCase()) ? true : false\n            }\n            else{\n                return true\n            }\n        })\n        return(\n            <div className=\"searchcontainer\">\n                <div className=\"searchbar\">\n                    <input \n                        placeholder=\"Search for articles\"\n                        type=\"text\" \n                        value={this.state.text} \n                        onChange={(event) => this.setState({text: event.target.value})} />\n                    <div className=\"searchemoji\">üîç</div>\n                </div>\n                <div css={css`{\n                    font-size:10px;\n                    margin-left:10px;\n                    border-bottom:1px solid grey;\n                    display:inline-block;\n                    cursor:pointer;\n                    position: relative;\n                    top: -6px;\n                }`} onClick={()=>this.setState({text : \"\"})}>clear search</div>\n                <div className=\"searchresults\">\n                {\n                    renderSearchData.map((data,index)=>{\n                        return <div key={index}>{data.frontmatter.title}</div>\n                    })\n                }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchbarComponent","import React from 'react'\nimport {Link} from 'gatsby'\nimport {css} from '@emotion/core'\nimport useAllPosts from './../hooks/use-allposts';\nimport Layout from './../components/layout';\nimport Searchbar from '../components/searchbar'\n\nconst HomePage = ()=>{\n    let allNodes = useAllPosts()\n    console.log(\"before allNodes \",allNodes)\n    \n    allNodes = allNodes.sort(function(a, b) {\n        return a.frontmatter.articleid > b.frontmatter.articleid ? -1 : 1\n    })\n    console.log(\"after allNodes \",allNodes)\n\n    return(\n        <Layout>\n            <div>\n                <Searchbar allNodes={allNodes}/>\n            </div>\n        </Layout>\n    )\n}\n\nexport default HomePage","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport {css} from '@emotion/core'\nimport {Link} from 'gatsby'\nimport styled from '@emotion/styled'\n\nconst HeaderLink = styled(Link)`\n    color:orange;\n    text-decoration:none; \n\n`\n\nconst HeaderComponent = ()=>(\n    <div css={css`\n        padding:1rem 0;\n        a{\n            &:hover{\n                color:green;\n            }\n        }\n        background-color:black;\n        margin-bottom:20px;\n    `}>        \n        <div css={css`\n            margin:0 auto;\n            width:90%;\n            max-width:800px;\n        `}>\n            <HeaderLink to=\"/\">HOME</HeaderLink>\n        </div>\n    </div>\n)\n\nexport default HeaderComponent","import React from 'react'\nimport Helment from 'react-helmet'\nimport {Global,css} from '@emotion/core'\nimport Header from './header'\nimport Footer from './footer'\n\nconst LayoutComponent=(props)=>(\n    <>\n        <Global styles={css`\n            *{\n                box-sizing:border-box;\n                margin:0;\n            }\n            html,body{\n                margin:0;\n                color:#555;\n                font-size:18px;\n                line-height:1.4;\n                font-family: sans-serif;\n            }\n            body{\n                background-color:white;\n            }\n            main{\n                margin:0 auto;\n                width:90%;\n                max-width:800px;\n            }\n        `\n        }\n        />\n        <Helment>\n            <html lang=\"en\" />\n            <title>Genericdatatype - title</title>\n            <meta name=\"description\" content=\"generic data type\" />   \n        </Helment>\n        <header>\n            <Header />\n        </header>\n        <main>\n            {props.children}\n        </main>\n        <footer></footer>\n    </>\n)\n\nexport default LayoutComponent\n\n"],"sourceRoot":""}