{"version":3,"sources":["webpack:///./src/hooks/use-allposts.js","webpack:///./src/constants/index.js","webpack:///./src/components/searchbar/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["useAllPosts","_2997365674","data","allMdx","nodes","tags","SearchbarComponent","props","_this","_React$Component","call","this","searchText","console","log","filteredData","allNodes","filter","index","length","frontmatter","title","toLowerCase","includes","setState","renderData","text","searchResultsCount","filterByTag","selectedtag","state","componentDidMount","render","_this2","Object","core_browser_esm","className","placeholder","type","value","onChange","event","target","css","_ref","tagList","map","key","onClick","_ref2","_ref3","tagData","tagsplit","split","gatsby_browser_entry","to","slug","publisheddate","React","Component","HomePage","sort","a","b","articleid","layout","components_searchbar","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","_objectSpread","json","propTypes","shape","pathname","HeaderLink","styled_base_browser_esm","Link","name","styles","HeaderComponent","LayoutComponent","react_default","Fragment","layout_ref","Helmet_default","lang","content","header","children"],"mappings":"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","file":"component---src-pages-index-js-1b791745c6817ed7f6f0.js","sourcesContent":["import {graphql,useStaticQuery} from 'gatsby'\n\nconst useAllPosts=()=>{\n\n    const data = useStaticQuery(graphql`\n        query {\n            allMdx {\n                nodes {\n                    frontmatter {\n                        author\n                        slug\n                        title\n                        articleid\n                        publisheddate\n                        tags\n                    }\n                }\n            }\n        }\n    `)\n    return data.allMdx.nodes\n}\n\nexport default useAllPosts;","export const tags=[\n    \"java\",\"node.js\",\"ar\",\"machine-learning\"\n]","import React from 'react'\nimport {Link} from 'gatsby'\nimport {css} from '@emotion/core'\nimport './index.css';\nimport {tags as tagList} from './../../constants'\nclass SearchbarComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            text : \"\",\n            renderData : [],\n            searchResultsCount : 0\n        }\n    }\n    componentDidMount(){\n        console.log(\"in componentDidMount\")\n        const allNodes = this.props.allNodes\n        console.log(\"allNodes \",allNodes)\n        this.setState({\n            renderData: allNodes,\n            searchResultsCount : allNodes.length\n        })\n    }\n    searchText = (searchText)=>{\n        console.log(\"searchText \",searchText)  \n        let filteredData = this.props.allNodes.filter((data,index)=>(searchText.length >=3\n            ? data.frontmatter.title.toLowerCase().includes(searchText.toLowerCase()) ? true : false\n            : true\n        ))\n\n        this.setState({\n            renderData : filteredData,\n            text:searchText,\n            searchResultsCount : filteredData.length\n        })\n        \n    }\n    filterByTag = (selectedtag)=>{\n        console.log(\"selectedtag \",selectedtag)\n        let filteredData = this.props.allNodes.filter((data,index)=>(\n            data.frontmatter.tags.includes(selectedtag) ? true : false            \n        ))\n        this.setState({\n            renderData : filteredData,\n            text: '['+selectedtag+']',\n            searchResultsCount : filteredData.length\n        })\n    }\n    render(){\n        \n        return(\n            <div className=\"searchcontainer\">\n                <div className=\"searchbar\">\n                    <input \n                        placeholder=\"Search for articles\"\n                        type=\"text\" \n                        value={this.state.text} \n                        onChange={(event) => this.searchText(event.target.value)} />\n                    <div className=\"searchemoji\">🔍<div className=\"help\">to auto-search enter >=3 letters or filterby tag</div></div>\n                </div>\n                <div className=\"searchoptions\" css={css`\n                    .clearsearch{\n                        display:inline-block;\n                        font-size:10px;\n                        margin-left:3px;\n                        border-bottom:1px solid #928f8f;\n                        cursor:pointer;\n                        position: relative;\n                        // top: -6px;\n                        right:0;\n                        float:right;\n                        color:#928f8f;\n                        &:hover{\n                            color:#b3afaf;\n                            border-bottom:1px solid #b3afaf;\n                        }\n                    }\n                    .tags{\n                        //margin-left:10px;\n                        position: relative;\n                        top: -6px;\n                        \n                        display:inline-block;\n                        font-size:11px;\n                        .tag{\n                            border-bottom:1px solid #928f8f;\n                            color:#928f8f;\n                        }\n                        .tag:hover{\n                            cursor:pointer;\n                            border-bottom:1px solid #b3afaf;\n                            color:#b3afaf;\n                        }\n                        .tag:not(:first-of-type){\n                            margin-left:5px;\n                        }\n                    }\n                `}>\n                    <div className=\"tags\">\n                        <span>filterby </span>\n                        {tagList.map((data,index)=><span className=\"tag\" key={index} \n                        onClick={()=>this.filterByTag(data)}>{data}</span>)}\n                    </div>\n                    <div \n                        className=\"clearsearch\" \n                        onClick={()=>this.searchText(\"\")}>clear search</div>\n                    <div \n                        css={css`\n                            font-size:11px;\n                            //margin-left:10px;\n                            position:relative;\n                        `}\n                    >{this.state.searchResultsCount} {this.state.searchResultsCount === 1 ? 'result' : 'results'} </div>\n                </div>\n                <div className=\"searchresults\" css={css`{\n                    .result{\n                        border-bottom:1px solid #dcd4d4;\n                        padding: 10px 0px;\n                        .title{\n                            color:#0276cc;\n                        }\n                        .title:hover{\n                            color:#56aff1;\n                            cursor:pointer;\n                        }\n                        .meta{\n                            padding: 3px 0px;\n                            font-size:11px;\n                            .publisheddate{\n                                display:inline-block;\n                                color:#757575;\n                            }\n                            .tags{\n                                display:inline-block;\n                                margin-top:3px;\n                                margin-left:15px;\n                                .tag{\n                                    display:inline-block;\n                                    padding:1.2px 4.5px;\n                                    border-radius:2px;\n                                    border:0px solid grey;\n                                    background-color:#e1ecf4;\n                                    color:#38739d;\n                                }\n                                .tag:hover{\n                                    background-color:#cee0ed;\n                                    cursor:default;\n                                }\n                                .tag:not(:first-of-type){\n                                    margin-left:4px;\n                                }\n                            }\n                        }\n                        \n                    }\n                }`}>\n                    {\n                        this.state.renderData.map((data,index)=>{\n                            let tagData = null\n                            let tagsplit = data.frontmatter.tags.split(\",\")\n                            if(tagsplit.length > 1){\n                                tagData = tagsplit.map((data,index)=>(\n                                    <div key={index} className=\"tag\">{data}</div>\n                                ))\n                            }\n                            else{\n                                tagData = <div className=\"tag\">{tagsplit}</div>\n                            }\n                            return (\n                                <div key={index} className=\"result\">\n                                    <Link to={data.frontmatter.slug}>{data.frontmatter.title}</Link>\n                                    <div className=\"title\">{data.frontmatter.title}</div>\n                                    <div className=\"meta\">\n                                        <div className=\"publisheddate\">{data.frontmatter.publisheddate}</div>\n                                        <div className=\"tags\">\n                                            {tagData}\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchbarComponent","import React from 'react'\nimport {Link} from 'gatsby'\nimport {css} from '@emotion/core'\nimport useAllPosts from './../hooks/use-allposts';\nimport Layout from './../components/layout';\nimport Searchbar from '../components/searchbar'\n\nconst HomePage = ()=>{\n    let allNodes = useAllPosts()\n    console.log(\"before allNodes \",allNodes)\n    \n    allNodes = allNodes.sort(function(a, b) {\n        return a.frontmatter.articleid > b.frontmatter.articleid ? -1 : 1\n    })\n    console.log(\"after allNodes \",allNodes)\n\n    return(\n        <Layout>\n            <div>\n                <Searchbar allNodes={allNodes}/>\n            </div>\n        </Layout>\n    )\n}\n\nexport default HomePage","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport {css} from '@emotion/core'\nimport {Link} from 'gatsby'\nimport styled from '@emotion/styled'\n\nconst HeaderLink = styled(Link)`\n    color:orange;\n    text-decoration:none; \n\n`\n\nconst HeaderComponent = ()=>(\n    <div css={css`\n        padding:1rem 0;\n        a{\n            &:hover{\n                color:green;\n            }\n        }\n        background-color:black;\n        margin-bottom:20px;\n    `}>        \n        <div css={css`\n            margin:0 auto;\n            width:90%;\n            max-width:800px;\n        `}>\n            <HeaderLink to=\"/\">HOME</HeaderLink>\n        </div>\n    </div>\n)\n\nexport default HeaderComponent","import React from 'react'\nimport Helment from 'react-helmet'\nimport {Global,css} from '@emotion/core'\nimport Header from './header'\nimport Footer from './footer'\n\nconst LayoutComponent=(props)=>(\n    <>\n        <Global styles={css`\n            *{\n                box-sizing:border-box;\n                margin:0;\n            }\n            html,body{\n                margin:0;\n                color:#555;\n                font-size:18px;\n                line-height:1.4;\n                font-family: sans-serif;\n            }\n            body{\n                background-color:white;\n            }\n            main{\n                margin:0 auto;\n                width:90vw;\n                max-width:550px;\n            }\n        `\n        }\n        />\n        <Helment>\n            <html lang=\"en\" />\n            <title>Genericdatatype - title</title>\n            <meta name=\"description\" content=\"generic data type\" />   \n        </Helment>\n        <header>\n            <Header />\n        </header>\n        <main>\n            {props.children}\n        </main>\n        <footer></footer>\n    </>\n)\n\nexport default LayoutComponent\n\n"],"sourceRoot":""}